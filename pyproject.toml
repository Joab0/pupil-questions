[project]
name = "classmanager"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "bcrypt>=4.3.0",
    "fastapi[standard]>=0.116.1",
    "itsdangerous>=2.2.0",
    "openai>=1.99.9",
    "pydantic-extra-types>=2.10.5",
    "pydantic-settings>=2.10.1",
    "snowflake-id>=1.0.2",
    "tortoise-orm>=0.25.1",
]


[tool.ruff]
line-length = 100
indent-width = 4
exclude = ["migrations"]

target-version = "py312"

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I001",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F403"]

[tool.aerich]
tortoise_orm = "src.database.config.TORTOISE_ORM"
location = "./migrations"
src_folder = "./."

[tool.pyright]
typeCheckingMode = "standard"
# UnannotatedClassAttribute = false

[dependency-groups]
dev = ["aerich>=0.9.1", "basedpyright>=1.31.0"]
